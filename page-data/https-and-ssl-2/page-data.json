{"componentChunkName":"component---src-templates-post-jsx","path":"/https-and-ssl-2/","result":{"data":{"site":{"siteMetadata":{"title":"Seongjun Kim Blog"}},"markdownRemark":{"id":"dd1d3e00-4e08-55dc-9e58-b09bb83c5961","excerpt":"이전 글에서 HTTPS와 HTTP의 차이에 대해 알아봤다. HTTPS에서 보안 계층은 어떻게 동작하는지에 대해 좀 더 자세히 알아보자 SSL 인증서가 신뢰 할 수 있는 서버(사이트)임을 보장하는 방법 웹 브라우저가 서버에 접속할 때 서버는 먼저 인증서를 제공한다. 브라우저는 이 인증서를 발급한 CA가 자신이 갖고있는 CA의 리스트에 있는지를 확인한다. 있…","html":"<ul>\n<li>이전 글에서 HTTPS와 HTTP의 차이에 대해 알아봤다.</li>\n<li>HTTPS에서 보안 계층은 어떻게 동작하는지에 대해 좀 더 자세히 알아보자</li>\n</ul>\n<h2>SSL 인증서가 신뢰 할 수 있는 서버(사이트)임을 보장하는 방법</h2>\n<ol>\n<li>웹 브라우저가 서버에 접속할 때 서버는 먼저 인증서를 제공한다.</li>\n<li>브라우저는 이 인증서를 발급한 CA가 자신이 갖고있는 CA의 리스트에 있는지를 확인한다.</li>\n<li>\n<p>있다면 해당 CA의 공개키를 이용해서 인증서를 복호화 한다.</p>\n<ul>\n<li>CA의 공개키로 복호화 가능 하다는 것은 해당 비공개 키로 암호화 된 것을 의미한다.</li>\n</ul>\n</li>\n<li>복호화에 성공하면 CA에 의해 발급된 인증서라는 것이 검토됨을 의미한다.</li>\n</ol>\n<h3>그럼 사실 공개키만 있어도 복호화가 가능한거 아닌가?</h3>\n<ul>\n<li>데이터를 보호하는 목적이 아니다 </li>\n<li>복호화 할 수 있다는 것은 그 데이터가 비공개키로 암호화 되었다는 것을 의미</li>\n<li>따라서 공개키가 데이터를 제공한 사람의 신원을 보장해주는 것</li>\n<li>이를 전자서명이라고 한다.</li>\n</ul>\n<h2>SSL의 동작 방식</h2>\n<ul>\n<li>\n<p>이전 글에서 간단하게 SSL은 암호화된 데이터를 전송하기 위해 공개키와 대칭키를 혼합해서 쓴다고 했다.</p>\n<ul>\n<li>실제 데이터는 대칭키로 암호화 - ( 리소스가 적게 들어서 빠름 )</li>\n<li>대칭키를 공개키 방식으로 암호화</li>\n</ul>\n</li>\n<li>이에 대해 좀 더 자세히 알아보자</li>\n</ul>\n<h3>SSL Handshake</h3>\n<ol>\n<li>\n<p>Client Hello - 먼저 클라이언트가 서버에게 요청을 보낸다. 아래의 정보를 보낸다. </p>\n<ul>\n<li>클라이언트에서 생성한 <strong>랜덤 데이터</strong></li>\n<li>클라이언트 사용 가능한 암호화 방식 목록 - 서로 지원하는 암호화 방식이 다를 수 있으므로 협상 해야함</li>\n<li>Cipher Suite 목록</li>\n<li>세션 아이디 - 이미 SSL Handshake를 했다면 기존 세션을 사용한다. 이에 대한 식별자</li>\n</ul>\n</li>\n<li>\n<p>Server Hello - 위에 대한 응답을 준다.</p>\n<ul>\n<li>서버에서 생성한 <strong>랜덤 데이터</strong></li>\n<li>서버가 선택한 암호화 방식</li>\n<li>클라이언트의 암호화 방식 목록을 보고 서버에서도 사용할 수 있는 방식을 전달</li>\n<li>인증서</li>\n</ul>\n</li>\n<li>\n<p>클라이언트는 서버의 인증서를 확인하기위해 브라우저에 내장된 CA목록을 확인</p>\n<ul>\n<li>목록에 있다면 내장된 CA의 공개키로 복호화, 성공 시 인증서가 보증된 것</li>\n<li>없으면 경고</li>\n<li><strong>Pre-master secret</strong>를 생성한다.</li>\n<li>이후 이 <strong>Pre-master secret</strong>를  서버의 공개키로 암호화 해서 서버로 전송</li>\n</ul>\n</li>\n<li>\n<p>서버는 클라이언트로부터 받은 정보로 <strong>Session key</strong>를 유도</p>\n<ul>\n<li><strong>Pre-master secret</strong> 복호화한다.</li>\n<li><strong>Client 랜덤 데이터, Server 랜덤 데이터</strong> 와 함께 <strong>Session Key</strong>를 유도한다.</li>\n<li>이 Session Key로 암호화된 데이터 통신을 한다.</li>\n</ul>\n</li>\n<li>핸드쉐이크 잘 되었다고 알리고 끝</li>\n</ol>\n<h2>Opinions</h2>\n<ul>\n<li>pre master secret, client random, server random, session 등 많은 키가 생성되고 사용되어서 많이 헷갈린다.</li>\n<li>cloudflare 블로그에서 그림을 잘 그려놨다고 하던데 보러가야징</li>\n</ul>\n<h2>References</h2>\n<ul>\n<li><a href=\"https://www.geeksforgeeks.org/secure-socket-layer-ssl/\">https://www.geeksforgeeks.org/secure-socket-layer-ssl/</a></li>\n<li><a href=\"https://opentutorials.org/course/228/4894\">https://opentutorials.org/course/228/4894</a></li>\n<li><a href=\"https://learningnetwork.cisco.com/s/question/0D53i00000Kt0q0/which-layer-of-the-osi-model-do-ssl-and-tls-belong-to\">https://learningnetwork.cisco.com/s/question/0D53i00000Kt0q0/which-layer-of-the-osi-model-do-ssl-and-tls-belong-to</a></li>\n<li><a href=\"https://dokydoky.tistory.com/462\">https://dokydoky.tistory.com/462</a></li>\n</ul>","frontmatter":{"title":"HTTPS 와 SSL - 2","date":"December 19, 2021","update":"December 19, 2021","tags":["cs"],"series":null},"fields":{"slug":"/https-and-ssl-2/","readingTime":{"minutes":1.825}}},"seriesList":{"edges":[{"node":{"id":"15b51d30-c078-53de-a25e-48039f097339","fields":{"slug":"/3-mount/"},"frontmatter":{"title":"Ubuntu 에서 (외장) 하드디스크 사용하기 "}}},{"node":{"id":"ae390cb5-0f32-5525-9ffc-204ebb1321a2","fields":{"slug":"/4-pgconnectbad/"},"frontmatter":{"title":"PG:ConnectionBad - could not connect to server: Connection refused"}}},{"node":{"id":"ecda0f77-0b85-5ca7-b7e1-02b52c277c4d","fields":{"slug":"/23-InfraStructureAsCode/"},"frontmatter":{"title":"Infrastructure as code"}}},{"node":{"id":"0106d6fa-95ca-57ce-b105-a61ccc1bfe48","fields":{"slug":"/26-difference-between-binary-semaphore-and-mutex/"},"frontmatter":{"title":"Binary Semaphore vs Mutex"}}},{"node":{"id":"9b992cd0-63e6-58c6-9932-8635b1c6296f","fields":{"slug":"/sudo-with-touch-id/"},"frontmatter":{"title":"터미널에서 비밀번호 말고 touch id로 sudo 쓰기"}}},{"node":{"id":"8dfb02e2-4517-5ee9-8a31-a3558811607e","fields":{"slug":"/gh-pages-cname/"},"frontmatter":{"title":"gh-pages, custom domain(cname) 적용 안 될 때 (gatsby-gh-pages-action)"}}},{"node":{"id":"471fd508-4593-5513-aaed-79bff70247a9","fields":{"slug":"/op-ssh/"},"frontmatter":{"title":"1password + ssh key password"}}},{"node":{"id":"e310aca0-ac3a-5c50-a84e-cacf6da37a52","fields":{"slug":"/https-and-ssl/"},"frontmatter":{"title":"HTTPS 와 SSL"}}},{"node":{"id":"dd1d3e00-4e08-55dc-9e58-b09bb83c5961","fields":{"slug":"/https-and-ssl-2/"},"frontmatter":{"title":"HTTPS 와 SSL - 2"}}},{"node":{"id":"75217705-7603-5d83-8492-2112ee48b14b","fields":{"slug":"/single-point-of-failure/"},"frontmatter":{"title":"단일 장애 지점(SPOF)이란? Single Point of Failure"}}},{"node":{"id":"1661f2df-49ed-52ff-a108-89ffa05b6889","fields":{"slug":"/rate-limit/"},"frontmatter":{"title":"처리율 제한 Rate Limit"}}}]},"previous":{"fields":{"slug":"/week-49-2021-retrospective/"},"frontmatter":{"title":"49 주차 회고 [2021]"}},"next":{"fields":{"slug":"/week-50-2021-retrospective/"},"frontmatter":{"title":"50 주차 회고 [2021]"}}},"pageContext":{"id":"dd1d3e00-4e08-55dc-9e58-b09bb83c5961","series":null,"previousPostId":"585193c3-7e5c-5e45-b803-a296aa1592d8","nextPostId":"b6a1333f-e116-5548-9780-f4a20789b90d"}},"staticQueryHashes":[]}